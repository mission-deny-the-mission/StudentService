//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "Enrolement")]
pub struct Model {
    #[sea_orm(column_name = "StudentID", primary_key, auto_increment = false)]
    pub student_id: i32,
    #[sea_orm(column_name = "CourseID", primary_key, auto_increment = false)]
    pub course_id: i32,
    #[sea_orm(column_name = "EnrolementDate")]
    pub enrolement_date: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::course::Entity",
        from = "Column::CourseId",
        to = "super::course::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Course,
    #[sea_orm(
        belongs_to = "super::student::Entity",
        from = "Column::StudentId",
        to = "super::student::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Student,
}

impl Related<super::course::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Course.def()
    }
}

impl Related<super::student::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Student.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
